1、spring自己不做事务的具体实现，只是提供了声明式的事务接口供持久层实现。spring通过aop来实现声明式事务，根据声明的事务传播属性判断是否开启事务。

2、spring事务传播属性
  required：当前方法在事务中执行，如果调用该方法时已开启事务则加入当前事务，没有则开启一个新的事务。
  spports：当前方法不需要在事务中执行，如果调用该方法时已开启事务则加入当前事务，没有则无事务执行。
  mandatory：当前方法必须在事务中执行，如果调用该方法时已开启事务则加入当前事务，没有则抛出异常。
  required_new：总是新建一个事务，如果调用该方法时已开启事务则挂起当前事务，开启自己的事务。
  not_supported：不需要在事务中执行，如果已存在事务则挂起当前事务，在非事务中执行。
  never：不在事务中执行，如果已存在事务则抛出异常。
  nested：在事务中执行，如果不存在事务则开启一个新的事务，如果已存在事务则开启一个嵌套事务，外层方法的事务失败将使当前事务回滚，
  当前事务失败不会影响外层事务。
  
  3、spring事务隔离级别
    default：采用数据库默认的隔离级别
    uncommit：允许读取其他事务未提交的数据修改。
